<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Item Form</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #6366f1;
            --primary-dark: #4f46e5;
            --secondary-color: #f0f9ff;
            --text-color: #1e293b;
            --border-color: #e2e8f0;
            --success-color: #22c55e;
            --input-bg: #f8fafc;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #e2e8f0 0%, #f1f5f9 100%);
            margin: 0;
            padding: 0;
            min-height: 100vh;
            color: var(--text-color);
        }

        .parentContainer {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding: 2rem;
        }

        .form-container {
            background: rgba(255, 255, 255, 0.95);
            padding: 2.5rem;
            border-radius: 20px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 500px;
            backdrop-filter: blur(10px);
            transform: translateY(0);
            transition: transform 0.3s ease;
        }

        .form-container:hover {
            transform: translateY(-5px);
        }

        h2 {
            margin-bottom: 2rem;
            text-align: center;
            color: var(--primary-color);
            font-size: 2rem;
            font-weight: 700;
            position: relative;
        }

        h2::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 50px;
            height: 3px;
            background: var(--primary-color);
            border-radius: 2px;
        }

        .form-group {
            margin-bottom: 1.5rem;
            position: relative;
        }

        form label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
            color: var(--text-color);
            font-size: 0.9rem;
            transition: color 0.3s ease;
        }

        form select,
        form input[type="text"],
        form input[type="number"],
        form textarea {
            width: 100%;
            padding: 0.75rem 1rem;
            border: 2px solid var(--border-color);
            border-radius: 10px;
            font-size: 1rem;
            background: var(--input-bg);
            transition: all 0.3s ease;
            box-sizing: border-box;
        }

        form select:focus,
        form input:focus,
        form textarea:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 4px rgba(99, 102, 241, 0.1);
            background: white;
        }

        .file-input-container {
            position: relative;
            margin-bottom: 1.5rem;
        }

        .file-input-label {
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 1rem;
            background: var(--secondary-color);
            border: 2px dashed var(--primary-color);
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .file-input-label:hover {
            background: #e5eeff;
        }

        .file-input-label i {
            margin-right: 0.5rem;
            color: var(--primary-color);
        }

        input[type="file"] {
            display: none;
        }

        .checkbox-container {
            display: flex;
            align-items: center;
            margin-bottom: 1.5rem;
            cursor: pointer;
        }

        .checkbox-container input[type="checkbox"] {
            position: absolute;
            opacity: 0;
        }

        .checkbox-custom {
            width: 20px;
            height: 20px;
            border: 2px solid var(--border-color);
            border-radius: 5px;
            margin-right: 10px;
            position: relative;
            transition: all 0.3s ease;
        }

        .checkbox-container input[type="checkbox"]:checked + .checkbox-custom {
            background: var(--primary-color);
            border-color: var(--primary-color);
        }

        .checkbox-custom::after {
            content: '\f00c';
            font-family: 'Font Awesome 5 Free';
            font-weight: 900;
            color: white;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%) scale(0);
            transition: transform 0.2s ease;
        }

        .checkbox-container input[type="checkbox"]:checked + .checkbox-custom::after {
            transform: translate(-50%, -50%) scale(1);
        }

        button {
            width: 100%;
            padding: 1rem;
            background: var(--primary-color);
            color: white;
            border: none;
            border-radius: 10px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 1px;
            position: relative;
            overflow: hidden;
        }

        button:hover {
            background: var(--primary-dark);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(99, 102, 241, 0.2);
        }

        button::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.2);
            transform: translate(-50%, -50%) scale(0);
            border-radius: 50%;
            transition: transform 0.5s ease;
        }

        button:active::after {
            transform: translate(-50%, -50%) scale(2);
        }

        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            75% { transform: translateX(5px); }
        }

        .form-error {
            animation: shake 0.5s ease;
        }

        @media (max-width: 768px) {
            .parentContainer {
                padding: 1rem;
            }

            .form-container {
                padding: 1.5rem;
            }
        }

        .size-options {
            display: flex;
            gap: 1rem;
            margin-top: 0.5rem;
            padding: 0.5rem;
            background: var(--input-bg);
            border-radius: 10px;
            border: 2px solid var(--border-color);
        }

        .size-checkbox {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            cursor: pointer;
            padding: 0.5rem 1rem;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .size-checkbox:hover {
            background: rgba(99, 102, 241, 0.1);
        }

        .size-checkbox input[type="checkbox"] {
            width: 18px;
            height: 18px;
            border: 2px solid var(--border-color);
            border-radius: 4px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .size-checkbox input[type="checkbox"]:checked {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
        }

        .size-checkbox span {
            font-size: 0.9rem;
            font-weight: 500;
            color: var(--text-color);
        }

        .form-group.sizes {
            margin-bottom: 2rem;
        }

        @media (max-width: 480px) {
            .size-options {
                flex-direction: column;
                gap: 0.5rem;
            }

            .size-checkbox {
                width: 100%;
                justify-content: flex-start;
            }
        }
    </style>
</head>
<body>
    <div class="parentContainer">
        <div class="form-container">
            <h2>Item Entry Form</h2>
            <form id="itemForm" action="" method="post" enctype="multipart/form-data">
                <div class="form-group">
                    <label for="category">Categories</label>
                    <select name="categoryId" id="category">
                        <% for(let i=0;i<categories.length;i++){%>
                            <option value="<%-categories[i].category%>"><%-categories[i].category%></option>
                        <%}%>
                    </select>
                </div>

                <div class="form-group">
                    <label for="description">Description</label>
                    <textarea id="description" name="description" rows="4" placeholder="Enter the description" required></textarea>
                </div>

                <div class="form-group">
                    <label for="price">Price</label>
                    <input type="number" id="price" name="price" step="10" placeholder="Enter the price" required>
                </div>

                <div class="form-group">
                    <label for="quantity">Quantity</label>
                    <input type="number" id="quantity" name="quantity" placeholder="Enter the Quantity" required>
                </div>

                <div class="form-group">
                    <label for="size">Available Sizes</label>
                    <div class="size-options">
                        <label class="size-checkbox">
                            <input type="checkbox" name="sizes" value="S">
                            <span>Small</span>
                        </label>
                        <label class="size-checkbox">
                            <input type="checkbox" name="sizes" value="M" checked>
                            <span>Medium</span>
                        </label>
                        <label class="size-checkbox">
                            <input type="checkbox" name="sizes" value="L">
                            <span>Large</span>
                        </label>
                    </div>
                </div>

                <div class="file-input-container">
                    <label for="src" class="file-input-label">
                        <i class="fas fa-cloud-upload-alt"></i>
                        <span>Choose a file or drag it here</span>
                    </label>
                    <input type="file" id="src" name="file" required>
                </div>

                <label class="checkbox-container">
                    <input type="checkbox" id="isFeatured" name="isFeatured">
                    <span class="checkbox-custom"></span>
                    Is Featured
                </label>

                <button type="submit">
                    Submit Item
                </button>
            </form>
        </div>
    </div>

    <script>
        // Add file name display functionality
        document.getElementById('src').addEventListener('change', function(e) {
            const fileName = e.target.files[0]?.name;
            if (fileName) {
                const label = this.previousElementSibling.querySelector('span');
                label.textContent = fileName;
            }
        });

        // Add drag and drop functionality
        const fileInput = document.querySelector('.file-input-label');
        
        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            fileInput.addEventListener(eventName, preventDefaults, false);
        });

        function preventDefaults (e) {
            e.preventDefault();
            e.stopPropagation();
        }

        ['dragenter', 'dragover'].forEach(eventName => {
            fileInput.addEventListener(eventName, highlight, false);
        });

        ['dragleave', 'drop'].forEach(eventName => {
            fileInput.addEventListener(eventName, unhighlight, false);
        });

        function highlight(e) {
            fileInput.style.background = '#e5eeff';
            fileInput.style.borderStyle = 'solid';
        }

        function unhighlight(e) {
            fileInput.style.background = '';
            fileInput.style.borderStyle = 'dashed';
        }

        fileInput.addEventListener('drop', handleDrop, false);

        function handleDrop(e) {
            const dt = e.dataTransfer;
            const files = dt.files;
            document.getElementById('src').files = files;
            
            if(files[0]) {
                const label = fileInput.querySelector('span');
                label.textContent = files[0].name;
            }
        }
    </script>
</body>
</html>